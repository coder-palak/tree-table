{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-material-treetable/src/app/treetable/services/tree/tree.service.ts","ng://ng-material-treetable/src/app/treetable/services/validator/validator.service.ts","ng://ng-material-treetable/src/app/treetable/services/converter/converter.service.ts","ng://ng-material-treetable/src/app/treetable/default.options.ts","ng://ng-material-treetable/src/app/treetable/decorators/required.decorator.ts","ng://ng-material-treetable/src/app/treetable/component/treetable.component.ts","ng://ng-material-treetable/src/app/treetable/treetable.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","TreeService","prototype","traverse","root","f","this","_traverse","node","searchById","id","matchingNode","pathToRoot","children","forEach","child","some","buildPath","none","_this","c","getNodeDepth","fold","flatten","result","cloneDeep","splice","apply","indexOf","pathMap","key","Injectable","args","providedIn","ValidatorService","validateCustomOrder","customColumnOrder","xorN","xor","Object","keys","valid","isEmpty","uuidv4","require","ConverterService","toSearchableTree","tree","treeClone","treeService","toTreeTableTree","depth","isExpanded","isVisible","defaultOptions","verticalSeparator","highlightRowOnHover","elevation","Required","target","property","defineProperty","get","Error","set","writable","configurable","TreetableComponent","ngOnInit","Array","isArray","options","parseOptions","customOrderValidator","validatorService","map","x","join","displayedColumns","extractNodeProps","searchableTree","t","converterService","treeTableTree","st","treeTable","flatMap","dataSource","generateDataSource","filter","MatTableDataSource","formatIndentation","step","repeat","formatElevation","onNodeClick","clickedNode","el","every","p","find","nodeClicked","defaultOpts","defaults","Component","selector","template","ElementRef","Input","Output","__decorate","decorators","desc","d","getOwnPropertyDescriptor","Reflect","decorate","tslib_1.__decorate","__metadata","metadataKey","metadataValue","metadata","elem","Subject","nativeElement","tagName","toLowerCase","console","warn","TreetableModule","NgModule","declarations","imports","CommonModule","MatTableModule","MatIconModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Node, SearchableNode, NodeInTree } from '../../models';\nimport { cloneDeep } from 'lodash-es';\nimport { Option, some, none } from 'fp-ts/lib/Option';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n\n  /**\n   * Traverse a tree data structure and applies the provided @param f function\n   * to all nodes\n   * @param root the tree to be traversed\n   * @param f the function to be applied to all nodes\n   * N.B. this function modifies the existing tree\n   */\n  traverse<T, K extends Node<T>>(root: K, f: (node: K) => void): void {\n    this._traverse(root, (node: K) => {\n      f(node);\n      return true;\n    });\n  }\n\n  /**\n   * Search a tree for a node with the provided @param id\n   * @param root the tree to be searched\n   * @param id the id of the node to be retrieved\n   */\n  searchById<T, K extends SearchableNode<T>>(root: K, id: string): Option<NodeInTree<T>> {\n    let matchingNode: K;\n    const pathToRoot: {[k: string]: K} = {};\n    this._traverse(root, (node: K) => {\n      node.children.forEach(child => {\n        pathToRoot[child.id] = node;\n      });\n      if (node.id === id) {\n        matchingNode = node;\n      }\n      return node.id !== id;\n    });\n    return matchingNode ? some({\n      id: matchingNode.id,\n      value: matchingNode.value,\n      children: matchingNode.children,\n      pathToRoot: this.buildPath(id, pathToRoot)\n    }) : none;\n  }\n\n  /**\n   * Internal function that can be used to traverse or search the tree\n   * @param root the tree to be scanned\n   * @param f an optional function to be applied to all nodes\n   */\n  private _traverse<T, K extends Node<T>>(root: K, f: (node: K) => boolean): void {\n    if (!f(root)) {\n      return;\n    }\n    root.children.forEach(c => this._traverse(c, f));\n  }\n\n  /**\n   * Given a @param root tree and a @param node node, calculate the\n   * depth of the node in the tree\n   * @param root the tree\n   * @param node the node we want to calculate the depth of\n   */\n  getNodeDepth<T, K extends SearchableNode<T>>(root: K, node: K): number {\n    return this.searchById(root, node.id).fold(-1, n => n.pathToRoot.length);\n  }\n\n  /**\n   * Flatten a @param root tree into a list of its nodes\n   * @param root the tree to be flattened\n   */\n  flatten<T, K extends Node<T>>(root: K): K[] {\n    const result = [cloneDeep(root)];\n    for (let i = 0; i < result.length; i++) {\n      const node = result[i];\n      if (node.children) {\n        result.splice(result.indexOf(node) + 1, 0, ...node.children as K[]);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Internal function used to build the pathToRoot of a node in a tree\n   * @param id the id of the node\n   * @param pathMap the pathMap returned by searchById\n   */\n  private buildPath<T, K extends SearchableNode<T>>(id: string, pathMap: {[k: string]: K}): K[] {\n    const pathToRoot = [];\n    let key = id;\n    while (key) {\n      if (pathMap[key]) {\n        pathToRoot.push(pathMap[key]);\n        key = pathMap[key].id;\n      } else {\n        key = null;\n      }\n    }\n    return pathToRoot;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Node } from '../../models';\nimport { isEmpty, xor } from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  validateCustomOrder<T, K extends Node<T>>(node: K, customColumnOrder: Array<keyof T> & string[]): { valid: boolean, xor: string[] } {\n    const xorN = xor(Object.keys(node.value), customColumnOrder);\n    return {\n      valid: isEmpty(xorN),\n      xor: xorN\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { TreeService } from '../tree/tree.service';\nimport { Node, SearchableNode, TreeTableNode } from '../../models';\nimport { cloneDeep } from 'lodash-es';\nconst uuidv4 = require('uuid/v4');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConverterService {\n\n  constructor(private treeService: TreeService) { }\n\n  /**\n   * Clone a Node<T> object and convert it to a SearchableNode<T>\n   * @param tree the node to be converted\n   */\n  toSearchableTree<T>(tree: Node<T>): SearchableNode<T> {\n    const treeClone = cloneDeep(tree) as SearchableNode<T>;\n    this.treeService.traverse(treeClone, (node: SearchableNode<T>) => {\n      node.id = node.id ? node.id : uuidv4();\n    });\n    return treeClone;\n  }\n\n  /**\n   * Clone a SearchableNode<T> object and convert it to a TreeTableNode<T>\n   * @param tree the node to be converted\n   */\n  toTreeTableTree<T>(tree: SearchableNode<T>): TreeTableNode<T> {\n    const treeClone = cloneDeep(tree) as TreeTableNode<T>;\n    this.treeService.traverse(treeClone, (node: TreeTableNode<T>) => {\n      node.depth = this.treeService.getNodeDepth(treeClone, node);\n      node.isExpanded = true;\n      node.isVisible = true;\n    });\n    return treeClone;\n  }\n\n}\n","import { Options } from './models';\n\nexport const defaultOptions: Options<any> = {\n  verticalSeparator: true,\n\thighlightRowOnHover: true,\n\televation: 5\n};\n","/**\n * Decorator that sets an Input() propertiy as required, will\n * throw an error if the property is not specified in the template.\n * I.e. @Input() @Required myProp: number;\n */\nexport function Required(target: Object, property: string): void {\n  Object.defineProperty(target, property, {\n    get() {\n      throw new Error(`Input '${property}' is required. Have you forgotten to add [${property}] = ... in your template?`);\n    },\n    set(value) {\n      Object.defineProperty(target, property, {\n        value,\n        writable: true,\n        configurable: true\n      });\n    },\n  });\n}\n","import { Component, OnInit, Input, Output, ElementRef } from '@angular/core';\nimport { Node, TreeTableNode, Options, SearchableNode } from '../models';\nimport { TreeService } from '../services/tree/tree.service';\nimport { MatTableDataSource } from '@angular/material';\nimport { ValidatorService } from '../services/validator/validator.service';\nimport { ConverterService } from '../services/converter/converter.service';\nimport { defaultOptions } from '../default.options';\nimport { flatMap, defaults } from 'lodash-es';\nimport { Required } from '../decorators/required.decorator';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'ng-treetable, treetable', // 'ng-treetable' is currently being deprecated\n  templateUrl: './treetable.component.html',\n  styleUrls: ['./treetable.component.scss']\n})\nexport class TreetableComponent<T> implements OnInit {\n  @Input() @Required tree: Node<T> | Node<T>[];\n  @Input() options: Options<T> = {};\n  @Output() nodeClicked: Subject<TreeTableNode<T>> = new Subject();\n  private searchableTree: SearchableNode<T>[];\n  private treeTable: TreeTableNode<T>[];\n  displayedColumns: string[];\n  dataSource: MatTableDataSource<TreeTableNode<T>>;\n\n  constructor(\n    private treeService: TreeService,\n    private validatorService: ValidatorService,\n    private converterService: ConverterService,\n    elem: ElementRef\n  ) {\n    const tagName = elem.nativeElement.tagName.toLowerCase();\n    if (tagName === 'ng-treetable') {\n      console.warn(`DEPRECATION WARNING: \\n The 'ng-treetable' selector is being deprecated. Please use the new 'treetable' selector`);\n    }\n  }\n\n  ngOnInit() {\n    this.tree = Array.isArray(this.tree) ? this.tree : [this.tree];\n    this.options = this.parseOptions(defaultOptions);\n    const customOrderValidator = this.validatorService.validateCustomOrder(this.tree[0], this.options.customColumnOrder);\n    if (this.options.customColumnOrder && !customOrderValidator.valid) {\n      throw new Error(`\n        Properties ${customOrderValidator.xor.map(x => `'${x}'`).join(', ')} incorrect or missing in customColumnOrder`\n      );\n    }\n    this.displayedColumns = this.options.customColumnOrder\n      ? this.options.customColumnOrder\n      : this.extractNodeProps(this.tree[0]);\n    this.searchableTree = this.tree.map(t => this.converterService.toSearchableTree(t));\n    const treeTableTree = this.searchableTree.map(st => this.converterService.toTreeTableTree(st));\n    this.treeTable = flatMap(treeTableTree, this.treeService.flatten);\n    this.dataSource = this.generateDataSource();\n  }\n\n  extractNodeProps(tree: Node<T> & { value: { [k: string]: any } }): string[] {\n    return Object.keys(tree.value).filter(x => typeof tree.value[x] !== 'object');\n  }\n\n  generateDataSource(): MatTableDataSource<TreeTableNode<T>> {\n    return new MatTableDataSource(this.treeTable.filter(x => x.isVisible));\n  }\n\n  formatIndentation(node: TreeTableNode<T>, step: number = 5): string {\n    return '&nbsp;'.repeat(node.depth * step);\n  }\n\n\tformatElevation(): string {\n\t\treturn `mat-elevation-z${this.options.elevation}`;\n\t}\n\n  onNodeClick(clickedNode: TreeTableNode<T>): void {\n    clickedNode.isExpanded = !clickedNode.isExpanded;\n    this.treeTable.forEach(el => {\n      el.isVisible = this.searchableTree.every(st => {\n        return this.treeService.searchById(st, el.id).\n          fold([], n => n.pathToRoot)\n          .every(p => this.treeTable.find(x => x.id === p.id).isExpanded);\n      });\n    });\n    this.dataSource = this.generateDataSource();\n    this.nodeClicked.next(clickedNode);\n  }\n\n  // Overrides default options with those specified by the user\n  parseOptions(defaultOpts: Options<T>): Options<T> {\n    return defaults(this.options, defaultOpts);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TreetableComponent } from './component/treetable.component';\nexport { Node, Options} from './models';\n\n@NgModule({\n  declarations: [\n    TreetableComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatIconModule\n  ],\n  exports: [\n    TreetableComponent\n  ]\n})\nexport class TreetableModule { }\n"]}